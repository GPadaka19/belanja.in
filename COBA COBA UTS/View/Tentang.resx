<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec condimentum velit sit amet diam posuere dapibus. Phasellus lorem justo, venenatis lacinia nisl non, viverra tempor nisi. Etiam quis magna a nibh faucibus porttitor id vitae libero. Sed auctor dolor ac sem laoreet, ut tincidunt velit gravida. Nunc tempor tortor quis ligula interdum venenatis. Sed ac nisl euismod, consectetur arcu nec, ornare dui. Nunc sodales justo et augue euismod pulvinar. Ut bibendum, metus et pellentesque faucibus, lacus velit semper ligula, sed laoreet eros justo quis ipsum. Aenean vel mi ullamcorper sapien gravida rutrum. Donec tincidunt, velit vel accumsan ultricies, erat lorem accumsan velit, at imperdiet felis orci sit amet lacus. Aliquam erat volutpat. Aenean quis elementum nisl. Nunc vestibulum, lacus eget ultricies finibus, dolor purus placerat nisi, eget facilisis ligula lacus sed lacus. Nam ultricies tempus nisi, in volutpat tortor tincidunt non.

Pellentesque non leo lorem. In auctor hendrerit elit quis porta. Cras hendrerit, diam et euismod efficitur, nulla enim laoreet risus, id aliquam lorem orci quis mi. Phasellus accumsan est vel lacus laoreet, quis ultricies justo congue. Sed pellentesque urna leo, tincidunt mollis purus ullamcorper sed. Suspendisse nisi tellus, volutpat ac ultrices sed, egestas ac nisl. Suspendisse maximus libero elit, et varius nulla sagittis vel. Integer viverra viverra purus. Mauris ullamcorper vestibulum quam ut pharetra. Donec ac cursus augue. Morbi consequat porta suscipit. Sed a est suscipit lorem vestibulum dapibus non ut ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae;

Praesent est lectus, volutpat nec viverra blandit, finibus sollicitudin lectus. Duis sit amet nisi ac sapien condimentum vulputate. Quisque at odio dictum ante venenatis scelerisque. Aenean nec varius dolor, et malesuada mauris. Integer sit amet commodo nulla. Suspendisse quis neque nisl. Nulla placerat neque nibh, vel dictum nisi malesuada mollis.

Pellentesque venenatis leo non tempus fermentum. Duis ac leo lorem. Sed vel maximus tellus, ut hendrerit augue. In leo elit, bibendum a metus quis, congue dignissim lorem. Ut vitae urna consequat, consequat justo ac, blandit turpis. Curabitur pharetra, nisi vel venenatis rhoncus, mi eros tempus magna, non maximus turpis urna sed neque. Aenean ultrices ac velit at volutpat. Aenean consectetur ligula non gravida semper. Nullam ut laoreet justo. Cras vulputate feugiat leo sed vestibulum. Nulla erat felis, convallis in tristique eget, eleifend non ipsum. Sed eu nibh egestas lorem venenatis finibus a vitae enim. Nunc ac nisl sed lorem accumsan volutpat. Nam dapibus, velit ut feugiat tempor, purus diam gravida mauris, id dictum ex velit vitae mauris. 
</value>
  </data>
</root>